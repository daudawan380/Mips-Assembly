.data
	Initial_msg: .asciiz "\n\t**********************************\n\t* WELCOME TO BULC ONLINE CASINO *\n\t********************************** \n PLEASE ENTER AN AMOUNT BETWEEN $1 TO $1000 DOLLARS TO BET. \n\tWISH YOU GOOD LUCK\n\n"
	Initial_msg2: .asciiz "\nLet's start the game. \nFind out the secret number between 1 and 100. \nEnter 0 to give up\n\n"
	Bigger_msg: .asciiz "\n Secret number is bigger than that one...\n"
	Smaller_msg: .asciiz "\n Secret number is smaller than that one...\n"
	Right_Answer_msg: .asciiz "\n\tCongratulations! \nYou've got it!"
	Game_Over_msg: .asciiz "\n No more tries, You lose your all money\n\tBETTER LUCK NEXT TIME!\n"
	tries2_msg: .asciiz " You got two more tries.\n\n"
	try1_msg: .asciiz "You got only one last try.\n\n"
	Number_msg: .asciiz "The Secret number was: "
	prof_msg: .asciiz " Your total profit is: $"

	# $s0 -> Random number generated by the computer
	# $s1 -> Number chosen by the player
	# $s2 -> Number of tries
	# $s3 -> Money entered by user 

.text
main:
	li $v0, 42 # syscall code to generate a random number
	li $a1, 10 # sets the upper bound to 100
	syscall
	
	move $t0, $a0 # moves the genrated number to register $t0
	add $s0, $t0, 1 # add 1 to the number generated between 0-9
	add $s2, $zero, 3 # sets $s2 to the number of tries
	
	
	li $v0, 4 # syscall code to print a string
	la $a0, Initial_msg 
	syscall
	
	action_1st:
		li $v0, 5 # syscall code to read an integer
		syscall
		move $s3, $v0 # saves in $s3
		
		 
	li $v0, 4 # syscall code to print a string
	la $a0, Initial_msg2 
	syscall
		
	action_2nd:
		li $v0, 5 # syscall code to read an integer
		syscall
		move $s1, $v0 # saves in $s1

		beq $s1, $zero, end # verifies if the player has given up
		beq $s0, $s1, got_it # checks if the player has gotten right the number

		sub $s2, $s2, 1 # decreases the number of tries remaining
		beq $s2, $zero game_over # the number of tries have reached zero

		slt $t0, $s1, $s0
		beq $t0, 1, its_bigger

	its_smaller:
		li $v0, 4 # syscall code to print a string
		la $a0, Smaller_msg 
		syscall
		j more_actions

	its_bigger:
		li $v0, 4 # syscall code to print a string
		la $a0, Bigger_msg
		syscall

	more_actions:
		beq $s2, 2, tries_2 # restam 2 tentativas
		beq $s2, 1, try_1 # restam 1 tentativa

		j action_2nd

	tries_2:
		li $v0, 4 # syscall code to print a string
		la $a0, tries2_msg 
		syscall
		j action_2nd

	try_1:
		li $v0, 4 # syscall code to print a string
		la $a0, try1_msg 
		syscall
		j action_2nd

	got_it:
		li $v0, 4 # syscall code to print a string
		la $a0, Right_Answer_msg 
		syscall
		j profit
	profit:
		li $v0 ,4 
		la $a0 ,prof_msg
		syscall
		
		li $s4,30
		mul $s3,$s4,$s3
		li $v0,1
		la $a0 , ($s3)
		syscall
		
		j end
		
	game_over:
		li $v0, 4 # syscall code to print a string
		la $a0, Game_Over_msg 
		syscall

		li $v0, 4 # syscall code to print a string
		la $a0, Number_msg 
		syscall

		li $v0, 1 # syscall code to print a integer
		la $a0, ($s0) # prints the number chosen by the computer
		syscall
end:
	li $v0, 10 # Ends the game
	syscall
